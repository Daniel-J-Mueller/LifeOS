Compute Inventory Service
========================

The compute inventory service collects details about the hardware
available at boot time. Other subsystems query this information to
adjust their behavior or load appropriate drivers.

CPU core counts are obtained through the HAL using the CPUID
instruction when available. Physical memory size is currently
retrieved from a HAL stub that returns a fixed value.

Data Structure
--------------

Inventory information is stored in a single `compute_inventory` struct:

```
struct compute_inventory {
    unsigned int cpu_cores;     /* number of detected CPU cores */
    unsigned long memory_bytes; /* total system memory in bytes */
    unsigned int pci_devices;   /* count of devices found on the PCI bus */
    uint8_t pci_class[MAX_INVENTORY_PCI]; /* class code of each discovered device */
};
```

Bus enumeration scans the primary PCI bus during initialization. Each
possible device and function on bus `0` is probed and counted when the
vendor ID register does not return `0xFFFF`.

The interactive shell provides an `info` command which dumps the
current contents of this structure so developers can verify detected
hardware.

Boot Sequence Overview
======================

This document outlines the expected order of operations when LifeOS starts.
Each stage is executed in sequence with the goal of bringing the system to an operational state.

1. **Firmware handoff**
   - The system firmware (BIOS or firmware loader) performs minimal hardware setup.
   - Control is passed to the LifeOS bootloader along with details about the boot device.
2. **Bootloader preparation**
   - The bootloader establishes a temporary stack and verifies the kernel image.
   - Basic memory mappings are created so the kernel can execute in protected mode.
   - Once the environment is ready, the kernel image is loaded into memory and execution is transferred.
3. **Kernel initialization**
   - Early kernel code sets up memory management structures and the initial page tables.
   - The task scheduler and interrupt handlers are brought online in a minimal form.
   - Services required for hardware discovery are enabled.
4. **Compute inventory gathering**
   - Hardware enumeration routines query CPU capabilities, available memory, storage, and peripheral buses.
   - Drivers report discovered devices so the OS knows what resources are present.
   - Results are stored for later use by higher level subsystems and logging.
5. **ACPI power management setup**
   - The ACPI parser scans memory for the RSDP and enumerates tables.
   - Power management registers are recorded and defaults are provided when tables are missing.
6. **Interface initialization**
   - The kernel starts the console so diagnostics and user input are possible.
   - External hooks for intelligence frameworks are registered if present.
   - Control transitions to the first scheduled task which continues normal operation.

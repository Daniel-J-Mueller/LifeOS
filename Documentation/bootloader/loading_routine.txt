Bootloader Loading Routine
=========================

This file describes how the bootloader fetches the kernel from disk. The routine
assumes the boot device uses BIOS services and that the kernel image occupies the
16 sectors immediately following the boot sector.

1. The boot drive number provided by the BIOS in `DL` is saved so subsequent disk
   reads use the correct device.
2. A temporary stack is set up at `0x7C00` and data segments are cleared.
3. Using BIOS interrupt `0x13` with function `0x02`, the loader reads 16 sectors
   starting at sector two (CHS `0/0/2`) into memory at address `0x0000:0x1000`.
4. If the disk read fails, the bootloader hangs to indicate an unrecoverable
   error. Error handling will be refined in later tasks.
5. On success, execution jumps to the loaded address where the 32â€‘bit kernel
   begins execution.

This simple strategy limits the bootloader to small kernel images but keeps the
code compact while the rest of the operating system is brought up.

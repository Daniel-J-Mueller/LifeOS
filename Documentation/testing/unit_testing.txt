Unit Testing Overview
=====================

This directory documents the small test programs used to validate isolated
components of LifeOS. Each test links against the OS sources with stubbed
hardware interfaces so logic can run on a standard host system.

The first available test verifies the compute inventory service:

- `tests/inventory_test.c` builds the inventory module with stub HAL
  functions and asserts that detected values match the expected stubs.

To build and run the test:

```
$ gcc -I src -DINVENTORY_TEST tests/inventory_test.c \
      src/kernel/inventory/inventory.c src/kernel/inventory/pci_classes.c -o tests/inventory_test
$ ./tests/inventory_test
```

Successful execution prints no output and returns zero.

A companion test, `tests/multi_gpu_inventory_test.c`, stubs two display controllers to ensure the inventory code handles hosts with multiple GPUs:
``` 
$ gcc -I src -DINVENTORY_TEST tests/multi_gpu_inventory_test.c \
      src/kernel/inventory/inventory.c src/kernel/inventory/pci_classes.c -o tests/multi_gpu_inventory_test
$ ./tests/multi_gpu_inventory_test
```
A zero exit status again indicates success.

To verify the in-memory file system:

```
$ gcc -I src tests/fs_test.c src/kernel/fs/fs.c src/lib/string.c -o tests/fs_test
$ ./tests/fs_test

$ gcc -I src tests/fs_list_test.c src/kernel/fs/fs.c src/lib/string.c -o tests/fs_list_test
$ ./tests/fs_list_test

$ gcc -I src tests/fs_delete_test.c src/kernel/fs/fs.c src/lib/string.c -o tests/fs_delete_test
$ ./tests/fs_delete_test

$ gcc -I src tests/fs_rename_test.c src/kernel/fs/fs.c src/lib/string.c -o tests/fs_rename_test
$ ./tests/fs_rename_test
```

Each command builds and runs a small program targeting a specific API. A zero
exit status indicates success.

To validate the ACPI parser stub and table discovery:

```
$ gcc -I src -DACPI_TEST tests/acpi_test.c src/kernel/acpi/acpi.c -o tests/acpi_test
$ ./tests/acpi_test
```

The test verifies that the parser populates the FADT structure and that
`acpi_get_table()` can locate the FADT by its signature.  Successful
execution prints no output and returns zero.
